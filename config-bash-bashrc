#
# doug murray : 23-Jan-2020
#
# Change History
#       16-Nov-96 cleared ancient history entries to 23-Jan-81
#       07-Mar-18 finally updated echo to printf where possible
#

#
# Common startup for POSIX shells
#   ksh, bash; not zsh because of (primarily) IFS differences
#
#   Functions starting with '_' are meant to be private
#

#
# customizable settings
#

BASH_CONFIG=~/.config/shells
HISTFILE="${BASH_CONFIG}/bash-history"

MAXDIRS=20                # default numbered directory aliases; change with sdirs cmd
HISTSIZE=5000             # maximum history size per session
HISTFILESIZE=5000         # maximum size of saved history file

USECOLOR=true             # let 'ls' and 'grep' use color if available
WINDOWHEADER="yes"        # display CWD in xterm/sun-cmd window header
SHOWGITBRANCH="yes"       # display git branch in xterm/sun-cmd window header

USERID=${UID:-"$(id -u)"} # will check for root or reserved IDs
OSTYPE="$(uname -s)"      # Linux, Darwin (MacOS), no longer check for Solaris, HPUX
TTY=$(tty)                # will check for interactive session

function setupCommands
        {
        #
        # not interactive, be terse
        #
        if [[ ! $- =~ i ]];
        then
                WINDOWHEADER="no"
                SHOWGITBRANCH="no"
        fi

        #
        # check for background/daemon caller
        #
        TTY="${TTY:-".bkgrd"}"
        if [[ "$TTY" = "not a tty" ]];
        then
                TTY=".bkgrd"
        fi

        if [[ "$TTY" != ".bkgrd" ]];
        then
                if [[ "$OSTYPE" = "Linux" ]];
                then
                        stty erase ^? kill ^U intr '^C' susp '^Z'
                else
                        stty erase '^H' kill '^?' intr '^C' susp '^Z'
                fi
                stty echok echoe echoke
        fi

        #
        # Several things need TERM to be set.
        # Assume we have a modern 256 color instance.
        #
        export TERM=${TERM:-"xterm-256color"}

        #
        # if the user has a personal group ID, then don't mask
        # the group write bit.  Only if not a system user ID.
        #
        if [[ $USERID -gt 99 ]];
        then
                #
                # in case this system doesn't name groups
                #
                _gname=$(id -gn &>/dev/null)
                err=$?
                if (( $err == 0 ))
                then
                        if [[ "$_gname" == "$(id -un)" ]];
                        then
                                umask 002
                        else
                                umask 022
                        fi
                fi
        fi

        #
        # Check on how we've been invoked.
        # This is done differently on MacOS,
        # Linux, Solaris, etc.
        #
        if [[ ${0:0:1} = "-" ]];
        then
                SHELLNAME="${0:1}"
        else
                SHELLNAME="${0}"
        fi
        if [[ "$SHELLNAME" = "su"  ]];
        then
                SHELLNAME=${SHELL:-"bash"}
        fi

        SHELLNAME=$(basename "$SHELLNAME")

        #
        # set various options depending
        # on which shell is running.
        #
        case $SHELLNAME in
                "bash"|"-bash")
                        shopt -s expand_aliases
                        alias whence=which
                        FCEDIT=$(type vi)
                        ;;
                "ksh"|"-ksh")
                        if [[ $(whence id) == "" ]];
                        then
                                USER="$LOGNAME"
                        else
                                USER=$(id|sed 's/[^)]*(\([^)]*\).*/\1/')
                        fi
                        FCEDIT=$(whence vi)
                        ;;
                *)
                        FCEDIT=$(type vi)
                        ;;
        esac

        #
        # Use VI mode when editting command line.
        #
        set -o vi

        #
        # important command variants
        #
        alias up=uptime
        alias cp='cp -i'
        alias mv='mv -i'
        alias rm='rm -i'
        alias j='jobs -l'
        alias h='history 30'
        alias z='printf "%s\n" "pid=$$ $SHELLNAME";suspend'
        alias gitl="git log --graph --decorate --oneline --all"

        #alias whide="printf "%s" $'\e'[2t"
        #alias wlower='printf "%s" $'\e'"[6t"'
        #alias wraise='printf "%s" $'\e'"[5t"'
        #alias wsize="printf "%s" $'\e''[8;42;80t'"
        #alias wmaxh='printf "%s" $'\e'"[3;0;t\033[8;0;80t"'
        #alias wmaxw='printf "%s" $'\e'"[3;0;t\033[8;24;0t"'
        #alias wmax='printf "%s" $'\e'"[3;0;t\033[8;0;0t"'

        #
        # BUILDKIT refers to docker build utility
        #
        export CVSROOT=${CVSROOT:-"/usr/local/Repository"}
        export EXINIT='se ai nohls report=2 terse'
        export EDITOR=vi
        export BUILDKIT_COLORS="run=cyan:cancel=yellow:warning=red"

        #
        # set up directory management feature
        #
        if type setDirectoryManagement &>/dev/null
        then
                setDirectoryManagement
                unset -f setDirectoryManagement
                alias cd=customChangeDirectory

                #
                # Add the current directory to the directory array
                #
                customChangeDirectory "$(pwd)"
        fi

        #
        # set up color usage
        # setColors checks USECOLOR variable
        #
        if type setColors &>/dev/null
        then
                setColors
        fi
        }

#
# print a list of defined functions
#
function showFunctions
        {

        compgen -A function
        }

#
# read commands from file if present
#
function _checkAndRead
        {

        for fileName in "$@";
        do
                if [[ -r "$fileName" ]];
                then
                        source "$fileName"
                fi
        done
        }

#
# bring job to foreground
#
function f
        {
        "fg" "%"${1}
        }

#
# csh persists
#
function setenv
        {

        export $1="$2"
        }

function noinsertmode
        {

        printf "%s" '\033[4l'
        }

#
# adjust window size
# usage: wsize cols rows
#
function wsize
        {
        printf "%s" "\033[8;$1;$2t"
        }

function ws
        {
        printf "%s" "\033[8;24;80t"
        }

function setLists
        {

        if ! type newlist &>/dev/null
        then
                #
                # no lists? add the basics
                #
                export PATH=${PATH:-"~/bin:/usr/local/bin:/usr/bin:/bin"}
        else
                #
                # Set up lists for standard environment variables.
                # Colors are set in the setColors function if
                # .bash-colors.bash is available and color usage is enabled
                #
                newlist path   PATH
                newlist cd     CDPATH
                newlist man    MANPATH
                newlist class  CLASSPATH -n
                newlist py     PYTHONPATH -e
                newlist lib    LD_LIBRARY_PATH
                newlist edm    EDMDATAFILES -e
                newlist ca     EPICS_CA_ADDR_LIST -s' ' -e
                newlist pva    EPICS_PVA_ADDR_LIST -s' ' -e

                #
                # Setup common paths
                #
                if [[ $USERID -eq 0 ]];
                then
                        addpath -q /usr/sbin
                        addpath -q /sbin
                fi

                addlib -q /usr/local/lib
                addlib -q /usr/lib

                addpath -q ~/bin
                addpath -q /usr/local/bin
                addpath -q /usr/bin
                addpath -q /bin

                addman -q /usr/local/share/man
                addman -q /usr/share/man
        fi
        }

#
# use the 'vi' command to start
# a GUI version of vim, or vim
# itself.  Use vi as a last resort
#
function findVim
        {

        case "$OSTYPE" in
                "Linux")
                        if type gvim &>/dev/null
                        then
                                alias vi='gvim'
                        else
                                if type vim &>/dev/null
                                then
                                        alias vi='vim'
                                else
                                        unalias vi &>/dev/null
                                fi
                        fi
                        ;;
                "Darwin")
                        if type mvim &>/dev/null
                        then
                                alias vi='mvim'
                        else
                                if type vim &>/dev/null
                                then
                                        alias vi='vim'
                                else
                                        unalias vi &>/dev/null
                                fi
                        fi

                        if type newlist &>/dev/null
                        then
                                newlist maclib DYLD_LIBRARY_PATH
                        fi
                        ;;
                *)
                        if type vim &>/dev/null
                        then
                                alias vi='vim'
                        else
                                unalias vi &>/dev/null
                        fi
                        ;;
        esac
        }

#-=-=-=-=-=-=-=-=
# bash-sdirs
_checkAndRead "${BASH_CONFIG}"/sdirs.bash

#-=-=-=-=-=-=-=-=
# bash-lists
_checkAndRead "${BASH_CONFIG}"/newlist.sh

#-=-=-=-=-=-=-=-=
# bashrc-git
_checkAndRead "${BASH_CONFIG}"/git.bash

#-=-=-=-=-=-=-=-=
# bashrc-colors
_checkAndRead "${BASH_CONFIG}"/colors.bash

#-=-=-=-=-=-=-=-=
# bashrc-colors
#_checkAndRead "${BASH_CONFIG}"/prompt-ZSH.bash
_checkAndRead "${BASH_CONFIG}"/prompt.bash

#-=-=-=-=-=-=-=-=

#
# the fun start here
#
setupCommands
setLists

#-=-=-=-=-=-=-=-=
# bashrc-hostSpecificSetup
_checkAndRead "${BASH_CONFIG}"/hostSpecificSetup.bash

#-=-=-=-=-=-=-=-=

#
# Set up host-specific environment variables
#
if type hostSpecificSetup &>/dev/null
then
        hostSpecificSetup
fi

#-=-=-=-=-=-=-=-=

#
# Find the best editor after setting
# the host-specific paths...
#
findVim

